<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FireantZhang</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fireantzhang.github.io/"/>
  <updated>2019-05-11T14:38:16.677Z</updated>
  <id>http://fireantzhang.github.io/</id>
  
  <author>
    <name>火蚁</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>你知道 adb 的无线方式开发模式吗？让你摆脱 USB 线的束缚</title>
    <link href="http://fireantzhang.github.io/2019/05/11/%E4%BD%A0%E7%9F%A5%E9%81%93-adb-%E7%9A%84%E6%97%A0%E7%BA%BF%E6%96%B9%E5%BC%8F%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F%E5%90%97%EF%BC%9F%E8%AE%A9%E4%BD%A0%E6%91%86%E8%84%B1-USB-%E7%BA%BF%E7%9A%84%E6%9D%9F%E7%BC%9A/"/>
    <id>http://fireantzhang.github.io/2019/05/11/你知道-adb-的无线方式开发模式吗？让你摆脱-USB-线的束缚/</id>
    <published>2019-05-11T09:37:06.000Z</published>
    <updated>2019-05-11T14:38:16.677Z</updated>
    
    <content type="html"><![CDATA[<h3 id="开发场景"><a href="#开发场景" class="headerlink" title="开发场景"></a>开发场景</h3><p>做Android开发的基本都知道，平常一般都是直接通过 USB 线或者 Type C线的方式连接，来完成日常的开发和调试，这种开发模式存在几个问题点，是一个极简主义者所不能忍受的</p><ul><li>电脑的 USB 口比较少，特别是 MAC 电脑，新版的就更是少得可怜；</li><li>有时候有些功能模块比较耗电的时候，手机耗电的速度会比电脑充电的速度慢，比如开发直播间模块，要长时间开摄像头的情况下；</li><li>开发好功能点，有时候要拿给同事看效果的时候也不太方便，隔着几个工位的时候，经常要拔掉线；</li></ul><h3 id="解决方案：开始使用-adb-WiFi-调试模式"><a href="#解决方案：开始使用-adb-WiFi-调试模式" class="headerlink" title="解决方案：开始使用 adb WiFi 调试模式"></a>解决方案：开始使用 adb WiFi 调试模式</h3><p>使用 adb WiFi 调试模式，通过以下几个步骤即可完成（开始这些配置之前先确保你的 adb 环境是配置好的）：</p><ol><li>确保 Android 手机和电脑连接的是同一局域网的 WiFi；</li><li>通过 USB 线连接 Android 手机；</li><li><p>设置手机侦听端口 5555 上的 TCP/IP 连接：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ adb tcpip 5555</span><br></pre></td></tr></table></figure><p> ※ 注意: 如果有多个手机连接在电脑上，需要用 -s ‘serial_number’ 参数指定目标手机，比如：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ adb -s &apos;04157df4d349bf21&apos; tcpip 5555</span><br></pre></td></tr></table></figure><p> 在命令行中看到 TCP mode port: 5555 就表示监听成功：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">~/Downloads » adb tcpip 5555 </span><br><span class="line">restarting <span class="keyword">in</span> TCP mode port: 5555</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">~/Downloads » adb -s <span class="string">'04157df4d349bf21'</span> tcpip 5555</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">~/Downloads » adb -s <span class="string">'04157df4d349bf21'</span> tcpip 5555</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">~/Downloads » adb -s <span class="string">'04157df4d349bf21'</span> tcpip 5555</span><br><span class="line">restarting <span class="keyword">in</span> TCP mode port: 5555</span><br><span class="line">------------------------------------------------------------</span><br></pre></td></tr></table></figure></li><li><p>通过 connect 命令和 IP 地址以及端口号连接到目标手机，比如：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ adb connect 192.168.1.146:5555</span><br></pre></td></tr></table></figure><p> 当看到 connected to xxx:5555 的提示语就表示连接成功：</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">~/Downloads » adb connect 192.168.1.146:5555</span><br><span class="line">connected to 192.168.1.146:5555</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">~/Downloads »</span><br></pre></td></tr></table></figure></li><li><p>拔掉 USB 线，验证一下，看到如下提示语，那么恭喜你，已成功打开 adb WiFi 的大门，可以开始畅游你的无线调试之旅啦。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~/Downloads » adb devices</span><br><span class="line">List of devices attached</span><br><span class="line">192.168.1.146:5555device</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">~/Downloads »</span><br></pre></td></tr></table></figure></li></ol><h3 id="敲命令行的你很酷很帅，不过-IDE-Plugins-的方式能让你更舒畅"><a href="#敲命令行的你很酷很帅，不过-IDE-Plugins-的方式能让你更舒畅" class="headerlink" title="敲命令行的你很酷很帅，不过 IDE Plugins 的方式能让你更舒畅"></a>敲命令行的你很酷很帅，不过 IDE Plugins 的方式能让你更舒畅</h3><p>上面介绍的是 adb 无线连接的基本实现，不过每次都得经历那些步骤，体验不是很好，能否有一种方式，直接在 Android Studio 中直接鼠标点点的快速方式来完成呢？答案：木有错，有得。</p><h5 id="AS-中插件市场的搜索结果，关键词：adb-wifi"><a href="#AS-中插件市场的搜索结果，关键词：adb-wifi" class="headerlink" title="AS 中插件市场的搜索结果，关键词：adb wifi"></a>AS 中插件市场的搜索结果，关键词：adb wifi</h5><p><img src="https://upload-images.jianshu.io/upload_images/215971-4486c3554a5cd8c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h5 id="全部都安装体验之后，最终只有两款能够顺利操作完成连接的：ADB-WiFi-Connect、WIFI-ADB-ULITIMATE，对比各种优缺点之后，最终只留下：WIFI-ADB-ULITIMATE"><a href="#全部都安装体验之后，最终只有两款能够顺利操作完成连接的：ADB-WiFi-Connect、WIFI-ADB-ULITIMATE，对比各种优缺点之后，最终只留下：WIFI-ADB-ULITIMATE" class="headerlink" title="全部都安装体验之后，最终只有两款能够顺利操作完成连接的：ADB WiFi Connect、WIFI ADB ULITIMATE，对比各种优缺点之后，最终只留下：WIFI ADB ULITIMATE"></a>全部都安装体验之后，最终只有两款能够顺利操作完成连接的：ADB WiFi Connect、WIFI ADB ULITIMATE，对比各种优缺点之后，最终只留下：WIFI ADB ULITIMATE</h5><ul><li>WIFI ADB ULITIMATE（可用，推荐使用这个）<br>  <img src="https://upload-images.jianshu.io/upload_images/215971-0413705166559a63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="WIFI ADB ULITIMATE"></li><li>ADB WiFi Connect（可用）<br>  <img src="https://upload-images.jianshu.io/upload_images/215971-91402aeb764f7e01.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ADB WiFi Connect"></li></ul><h5 id="两款插件的使用对比结论，供大家快速选择适合自己的那一款【毕竟青菜萝卜，各有所好】"><a href="#两款插件的使用对比结论，供大家快速选择适合自己的那一款【毕竟青菜萝卜，各有所好】" class="headerlink" title="两款插件的使用对比结论，供大家快速选择适合自己的那一款【毕竟青菜萝卜，各有所好】"></a>两款插件的使用对比结论，供大家快速选择适合自己的那一款【毕竟青菜萝卜，各有所好】</h5><table><thead><tr><th>对比点</th><th>WIFI ADB ULITIMATE</th><th>ADB WiFi Connect</th></tr></thead><tbody><tr><td>入口</td><td>run 旁边，每次使用打开一个新的对话框</td><td>操作窗口依附在 IDE 的右边工具窗口中，操作比较方便</td></tr><tr><td>功能点</td><td>连接、断开连击、记录连接设备、设备断开自动刷新</td><td>连接【以及主动输入目标 IP 地址的连接方式】、断开连接、USB 线和 WIFI 两种连接方式的设备分组展示、自动记录最近的 10 次连接记录</td></tr><tr><td>优点</td><td>设备断开和连接，自动刷新、操作直接 Log 提示</td><td>操作窗口固定、自动记录、可以手动输入 IP 地址进行连接</td></tr><tr><td>缺点</td><td>操作窗口是独立 Java 窗口程序，不跟随 IDE、需要手动点 Save</td><td>设备断开需要手动刷新才能识别出新的连接情况【后续期望作者能够加上自动监听】</td></tr></tbody></table><h3 id="最后，再提两点关于-adb-的事情"><a href="#最后，再提两点关于-adb-的事情" class="headerlink" title="最后，再提两点关于 adb 的事情"></a>最后，再提两点关于 adb 的事情</h3><ul><li>关于 adb 使用，谷歌官方的说明文档: <a href="https://developer.android.com/studio/command-line/adb" target="_blank" rel="noopener">https://developer.android.com/studio/command-line/adb</a></li><li>在找 adb wifi 插件的时候，还发现一款跟 adb 相关的插件（提供一些跟当前开发项目app常用的操作），觉得挺好用：ADB Idea，操作选项如下：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ADB Revoke Permissions</span><br><span class="line">ADB Revoke Permissions and Restart</span><br><span class="line">ADB Grant Permissions</span><br><span class="line">ADB Uninstall App</span><br><span class="line">ADB Kill App</span><br><span class="line">ADB Start App</span><br><span class="line">ADB ReStart App</span><br><span class="line">ADB Clear App Data</span><br><span class="line">ADB Start App With Debugger</span><br><span class="line">ADB Restart App With Debugger</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;开发场景&quot;&gt;&lt;a href=&quot;#开发场景&quot; class=&quot;headerlink&quot; title=&quot;开发场景&quot;&gt;&lt;/a&gt;开发场景&lt;/h3&gt;&lt;p&gt;做Android开发的基本都知道，平常一般都是直接通过 USB 线或者 Type C线的方式连接，来完成日常的开发和调试，这
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://fireantzhang.github.io/2019/05/11/hello-world/"/>
    <id>http://fireantzhang.github.io/2019/05/11/hello-world/</id>
    <published>2019-05-11T09:18:54.553Z</published>
    <updated>2019-05-11T09:18:54.553Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
